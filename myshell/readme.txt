1.c_str：
将string类型转化为char*

2.strtok
将一个字符串按照指定的分隔符进行分割，返回分割后的子字符串

第一次调用时，提供两个参数：strtok(要分割的字符串, 分隔符)
strtok会在字符串中查找分隔符，并将其替换为\0，同时返回指向该字串开头的指针
它会在内部保存下一次要开始搜索的位置。

后续调用，strtok(NULL, 分隔符)
strtok 会从上一次保存的位置继续向后搜索，重复第一步的操作。
当搜索到字符串末尾，再也找不到更多子字符串时，strtok 会返回 NULL。

它会修改原始字符串
它会用\0替换分隔符，所以传入的字符串必须是可修改的(比如char[]数组)，绝对不能是字符串常量const char*

3.fgets
从指定的文件流中读取一行数据，并将其存入字符数组中

char *fgets(char *str, int n, FILE *stream);
str: 一个字符数组的指针，用于存储读取到的数据。
n: 要读取的最大字符数（包括最后的空字符\0）。
stream: 文件流指针。最常见的是 stdin（标准输入，即键盘）。

如果读取到换行符 \n，它会被包含在 str 数组中。
fgets会在读取内容的末尾自动添加一个空字符 \0，以构成一个标准的 C 风格字符串。


4.stdin
标准输入流，可以把它想象成一个程序默认读取数据的 “管道”。这个管道的另一端，默认连接着你的键盘。

名称	含义	    默认设备	常用函数 / 对象
stdin	标准输入	键盘	    scanf, getchar, std::cin
stdout	标准输出	屏幕	    printf, puts, std::cout
stderr	标准错误	屏幕	    fprintf(stderr, ...), std::cerr

stdout (标准输出) 通常用于程序的正常输出。为了效率，它可能会被缓冲（即先把输出内容攒起来，再一次性显示）。
stderr (标准错误) 专门用于输出错误信息。它通常是无缓冲的，确保错误信息能立即显示出来，即使程序崩溃了

5.memset